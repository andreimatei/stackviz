type Mutation {
  createCollection(input: CreateCollectionInput): Collection
  # collect snapshots from all the nodes
  collectCollection: Collection
  addExprToCollectSpec(frame: String!, expr: String!): CollectSpec!
  removeExprFromCollectSpec(expr: String!, frame: String!): CollectSpec!
}

extend type Query {
  collectionByID(id: ID!): Collection
  goroutines(colID: Int!, snapID: Int!, gID: Int): [GoroutineInfo!]!
  availableVars(func: String!, pcOff: Int!): VarsAndTypes!
  frameInfo(func: String!): FrameInfo
  typeInfo(name: String!): TypeInfo!
  getTree(colID: Int!, snapID: Int!): String!
}

type VarsAndTypes {
  Vars: [VarInfo!]!
  Types: [TypeInfo!]!
}

type VarInfo {
  Name: String!
  Type: String!
  FormalParameter: Boolean!
  LoclistAvailable: Boolean!
}

type TypeInfo {
  Name: String!
  Fields: [FieldInfo]
  FieldsNotLoaded: Boolean!
}

type FieldInfo {
  Name: String!
  Type: String!
  Embedded: Boolean!
}

type GoroutineInfo {
  ID: Int!
  Frames: [String!]!
  Vars: [CollectedVar!]!
}

type CollectedVar {
  Value: String!
  Links: [Link!]!
}

type Link {
  SnapshotID: Int!
  GoroutineID: Int!
  FrameIdx: Int!
}
