# schema tells gqlgen where the GraphQL schema is located.
schema:
  - ent.graphql
  - collection.graphql

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: .

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.

# autobind tells gqlgen to search for any type names in the GraphQL schema in the
# provided package. If they match it will use them, otherwise it will generate new.
autobind:
  - stacksviz/ent
  - stacksviz/ent/collection
  - stacksviz/ent/processsnapshot
  - stacksviz/ent/collectspec

# This section declares type mapping between the GraphQL and Go type systems.
models:
  # Defines the ID field as Go 'int'.
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
      - github.com/99designs/gqlgen/graphql.Boolean
  Map:
    model:
      - github.com/99designs/gqlgen/graphql.Map
  Node:
    model:
      - stacksviz/ent.Noder
      - stacksviz/ent/collection.Noder
#  CategoryConfig:
#    model:
#      - stacksviz/ent/schema/schematype.CategoryConfig
#  FlightRecorderData:
#    model:
#      - stacksviz/ent/schema.FlightRecorderData

omit_slice_element_pointers: true

model:
  filename: graph/models_gen.go
  package: graph
